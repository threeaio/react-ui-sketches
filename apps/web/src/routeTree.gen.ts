/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SquircleExpandRouteImport } from './routes/squircle-expand'
import { Route as MenuExtendRouteImport } from './routes/menu-extend'
import { Route as GridExpandRouteImport } from './routes/grid-expand'
import { Route as IndexRouteImport } from './routes/index'

const SquircleExpandRoute = SquircleExpandRouteImport.update({
  id: '/squircle-expand',
  path: '/squircle-expand',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuExtendRoute = MenuExtendRouteImport.update({
  id: '/menu-extend',
  path: '/menu-extend',
  getParentRoute: () => rootRouteImport,
} as any)
const GridExpandRoute = GridExpandRouteImport.update({
  id: '/grid-expand',
  path: '/grid-expand',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/grid-expand': typeof GridExpandRoute
  '/menu-extend': typeof MenuExtendRoute
  '/squircle-expand': typeof SquircleExpandRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/grid-expand': typeof GridExpandRoute
  '/menu-extend': typeof MenuExtendRoute
  '/squircle-expand': typeof SquircleExpandRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/grid-expand': typeof GridExpandRoute
  '/menu-extend': typeof MenuExtendRoute
  '/squircle-expand': typeof SquircleExpandRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/grid-expand' | '/menu-extend' | '/squircle-expand'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/grid-expand' | '/menu-extend' | '/squircle-expand'
  id: '__root__' | '/' | '/grid-expand' | '/menu-extend' | '/squircle-expand'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GridExpandRoute: typeof GridExpandRoute
  MenuExtendRoute: typeof MenuExtendRoute
  SquircleExpandRoute: typeof SquircleExpandRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/squircle-expand': {
      id: '/squircle-expand'
      path: '/squircle-expand'
      fullPath: '/squircle-expand'
      preLoaderRoute: typeof SquircleExpandRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu-extend': {
      id: '/menu-extend'
      path: '/menu-extend'
      fullPath: '/menu-extend'
      preLoaderRoute: typeof MenuExtendRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/grid-expand': {
      id: '/grid-expand'
      path: '/grid-expand'
      fullPath: '/grid-expand'
      preLoaderRoute: typeof GridExpandRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GridExpandRoute: GridExpandRoute,
  MenuExtendRoute: MenuExtendRoute,
  SquircleExpandRoute: SquircleExpandRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
